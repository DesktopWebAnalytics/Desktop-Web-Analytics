<?xml version="1.0" encoding="utf-8"?>
<!--
	Desktop Web Analytics
	
	Link http://www.desktop-web-analytics.com
	Link https://github.com/DesktopWebAnalytics
	License http://www.gnu.org/licenses/gpl-3.0-standalone.html GPL v3 or later
	
	$Id: ProfileRenderer.mxml 333 2012-04-02 13:23:26Z benoit $
-->
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"
				width="260" height="80" autoDrawBackground="false" showsCaret="false"
				click="launch()" >
	<fx:Script>
		<![CDATA[
			import com.dwa.common.profile.Profile;
			import com.dwa.common.reports.Reports;
			
			import mx.collections.XMLListCollection;
			import mx.core.FlexGlobals;
			
			import spark.formatters.DateTimeFormatter;
			
			private var website:Profile;
			
			private var report:Reports;
			
			override public function set data(value:Object):void{
				if(value==null) {
					/* iconEvolution.source = null;
					evolution.text = ""; */
					return;
				}
				
				super.data = value;
				
				website = data as Profile;
				
				web.text = website.websiteName;
				url.text = website.websiteUrl;
				
				//showEvolution();
			}
			
			/* private function showEvolution():void{
				const DAY:int = 86400000;
				var formatDate:DateTimeFormatter = new DateTimeFormatter();
				formatDate.dateTimePattern = "yyyy-MM-dd";
				formatDate.setStyle("locale", "en_US");
				
				var today:Date = new Date();
				
				if(!website.websiteDay){
					today.time = today.time - DAY;
				}
				
				var yesterday:Date = new Date();
				yesterday.time = today.time - DAY;
				
				var dateRange:String = formatDate.format(yesterday) + ',' + formatDate.format(today);
				
				report = new Reports();
				
				report.addEventListener(Event.COMPLETE, complete);
				report.addEventListener(ErrorEvent.ERROR, error);
				report.getVisitsEvolution(website, dateRange);
			}
			private function complete(event:Event):void{
				var result:XMLListCollection = report.resultCollection;
				
				
				if(result && (result.length == 2)){
					var ref:Number = result[0][0];
					var today:Number = result[1][0];
					
					var evolutionValue:Number = ((today * 100) / ref) - 100;
					
					if(!evolutionValue) evolutionValue=0;
					
					if(evolutionValue > 0){
						iconEvolution.source = "assets/generalIcons/arrow_up.png";
						evolution.setStyle("color", "green");
					}else if(evolutionValue < 0){
						iconEvolution.source = "assets/generalIcons/arrow_down.png";
						evolution.setStyle("color", "red");
					}else{
						iconEvolution.source = null;
						evolution.setStyle("color", "black");
					}
					
					evolution.text = numberFormatter.format(evolutionValue) + '%';
				}else{
					trace("error with the result of visits evolution");
				}
				
				clearAll();
			}
			private function error(event:ErrorEvent):void{
				trace('error visits evolution');
				clearAll();
			}
			private function clearAll():void{
				report.removeEventListener(Event.COMPLETE, complete);
				report.removeEventListener(ErrorEvent.ERROR, error);
				report = null;
			} */
			private function launch():void{
				FlexGlobals.topLevelApplication.setCurrentProfile(data as Profile);
				FlexGlobals.topLevelApplication.launchReport();
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Placer ici les éléments non visuels (services et objets de valeur, par exemple). -->
		
		<s:NumberFormatter id="numberFormatter" trailingZeros="false" fractionalDigits="2" />
	</fx:Declarations>
	
	<s:SkinnableContainer left="0" right="0" top="0" bottom="0" skinClass="skin.components.ProfileSkin">
		<s:BitmapImage id="logo" source="@Embed('assets/72x72b.png')" width="72" height="72" verticalCenter="0" left="5" />
		
		<s:VGroup verticalCenter="0" left="80" right="4">
			<s:Label id="web" styleName="profileName" width="100%" maxDisplayedLines="1" />
			<s:Label id="url" styleName="profileUrl" width="100%" maxDisplayedLines="1" />
			<!--<s:HGroup verticalAlign="middle">
				<s:BitmapImage id="iconEvolution" />
				<s:Label id="evolution" />
			</s:HGroup>-->
		</s:VGroup>
	</s:SkinnableContainer>
</s:ItemRenderer>
